name: Train-Pipeline

on:
  push:
  pull_request:
    branches:
      - layers
      - branch_01
  workflow_dispatch:
  repository_dispatch:
    types:
      - webhook

jobs:
  test_train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test files
        run: |
          pytest test_train.py

  train_pipeline:
    runs-on: ubuntu-latest
    needs: [test_train]
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Train Model
        run: |
          python train.py

  build_image:
    runs-on: ubuntu-latest
    needs: [train_pipeline]
    steps:
      - uses: actions/checkout@v2

      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_IMAGE_NAME }}
